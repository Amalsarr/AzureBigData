{
	"name": "RunDaily",
	"properties": {
		"description": "Copy Posts parquet files daily from an WCD's Azure blob storage container",
		"activities": [
			{
				"name": "Get Metadata1",
				"description": "Get information about the dataset to check if there is any content",
				"type": "GetMetadata",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "AzureSqlTable1",
						"type": "DatasetReference"
					},
					"fieldList": [
						"exists"
					]
				}
			},
			{
				"name": "Check If Files Exist",
				"description": "An if condition activity that helps in deleting files only if the exist",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "Get Metadata1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@bool(activity('Get Metadata1').output.exists)",
						"type": "Expression"
					},
					"ifFalseActivities": [
						{
							"name": "Failure Alert_copy1",
							"description": "this activity sets up an email alert whenever the Pipeline fails.",
							"type": "WebActivity",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"method": "POST",
								"headers": {
									"Content-Type": "Application/json"
								},
								"url": "https://pipelinefailure-emailalert.azurewebsites.net:443/api/MyAlertWorkflow/triggers/When_a_HTTP_request_is_received/invoke?api-version=2022-05-01&sp=%2Ftriggers%2FWhen_a_HTTP_request_is_received%2Frun&sv=1.0&sig=UvzorP9hvO5d47ZXhEb__EvhRiMVBfvz6JMF9sN60yo",
								"body": {
									"value": "{\n \"Pipeline\": \"@{pipeline().Pipeline}\",\n \"ErrorMessage\": \"@{activity('Get Metadata1').Error.Message}\",\n \"DataFactoryName\": \"@{pipeline().DataFactory}\",\n \"Runid\": \"@{pipeline().RunId}\"\n}",
									"type": "Expression"
								}
							}
						}
					],
					"ifTrueActivities": [
						{
							"name": "Delete Posts",
							"description": "Delete posts from Posts directory",
							"type": "Delete",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"dataset": {
									"referenceName": "ds_load_Posts_WCD_pq",
									"type": "DatasetReference"
								},
								"logStorageSettings": {
									"linkedServiceName": {
										"referenceName": "ls_my_blob",
										"type": "LinkedServiceReference"
									},
									"path": "mydatalakefilesystem/Capstone2/DailyDeletedLog"
								},
								"enableLogging": true,
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							}
						}
					]
				}
			},
			{
				"name": "Retry Loop",
				"description": "Executes a set of activities in a loop for a specific duration.",
				"type": "Until",
				"dependsOn": [
					{
						"activity": "Check If Files Exist",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@variables('FilesCopied')",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "Copy Posts",
							"description": "Copy posts from WCD's Azure blob storage",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "ParquetSource",
									"storeSettings": {
										"type": "AzureBlobStorageReadSettings",
										"recursive": true,
										"wildcardFolderPath": "archive",
										"wildcardFileName": "*.parquet",
										"enablePartitionDiscovery": false
									},
									"formatSettings": {
										"type": "ParquetReadSettings"
									}
								},
								"sink": {
									"type": "ParquetSink",
									"storeSettings": {
										"type": "AzureBlobStorageWriteSettings"
									},
									"formatSettings": {
										"type": "ParquetWriteSettings"
									}
								},
								"enableStaging": false,
								"translator": {
									"type": "TabularTranslator",
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "ds_Posts_WCD_pq",
									"type": "DatasetReference"
								}
							],
							"outputs": [
								{
									"referenceName": "ds_load_Posts_WCD_pq",
									"type": "DatasetReference"
								}
							]
						},
						{
							"name": "Copy Posts Conditional Action",
							"type": "IfCondition",
							"dependsOn": [
								{
									"activity": "Copy Posts",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@equals(activity('Copy Posts').output.filesWritten, 0)",
									"type": "Expression"
								},
								"ifFalseActivities": [
									{
										"name": "Set FilesCopied",
										"type": "SetVariable",
										"dependsOn": [],
										"policy": {
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"variableName": "FilesCopied",
											"value": {
												"value": "@bool(true)",
												"type": "Expression"
											}
										}
									}
								],
								"ifTrueActivities": [
									{
										"name": "Retry WaitTime",
										"type": "Wait",
										"dependsOn": [],
										"userProperties": [],
										"typeProperties": {
											"waitTimeInSeconds": 1800
										}
									}
								]
							}
						}
					],
					"timeout": "01:00:00"
				}
			},
			{
				"name": "Check FilesCopied",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "Retry Loop",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@variables('FilesCopied')",
						"type": "Expression"
					},
					"ifFalseActivities": [
						{
							"name": "Copy Files Failure",
							"type": "Fail",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"message": "Posts files were not copied from the source.",
								"errorCode": "CopyError"
							}
						}
					],
					"ifTrueActivities": [
						{
							"name": "ML Post Classification",
							"type": "DatabricksNotebook",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"notebookPath": "/Workspace/Users/amalalsarrar@gmail.com/5_Model_Prediction"
							},
							"linkedServiceName": {
								"referenceName": "AzureDatabricks1",
								"type": "LinkedServiceReference"
							}
						}
					]
				}
			},
			{
				"name": "Failure Alert",
				"description": "this activity sets up an email alert whenever the Pipeline fails.",
				"type": "WebActivity",
				"dependsOn": [
					{
						"activity": "Get Metadata1",
						"dependencyConditions": [
							"Failed"
						]
					},
					{
						"activity": "Check If Files Exist",
						"dependencyConditions": [
							"Failed"
						]
					},
					{
						"activity": "Retry Loop",
						"dependencyConditions": [
							"Failed"
						]
					},
					{
						"activity": "Check FilesCopied",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"method": "POST",
					"headers": {
						"Content-Type": "Application/json"
					},
					"url": "https://pipelinefailure-emailalert.azurewebsites.net:443/api/MyAlertWorkflow/triggers/When_a_HTTP_request_is_received/invoke?api-version=2022-05-01&sp=%2Ftriggers%2FWhen_a_HTTP_request_is_received%2Frun&sv=1.0&sig=UvzorP9hvO5d47ZXhEb__EvhRiMVBfvz6JMF9sN60yo",
					"body": {
						"value": "{\n \"Pipeline\": \"@{pipeline().Pipeline}\",\n \"ErrorMessage\": \"@{activity('Copy Posts').Error.Message}\",\n \"DataFactoryName\": \"@{pipeline().DataFactory}\",\n \"Runid\": \"@{pipeline().RunId}\"\n}",
						"type": "Expression"
					}
				}
			}
		],
		"variables": {
			"FilesCopied": {
				"type": "Boolean",
				"defaultValue": false
			}
		},
		"annotations": []
	}
}